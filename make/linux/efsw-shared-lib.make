# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x86_64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../../include -I../../src
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lpthread
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef

ifeq ($(config),debug_x86_64)
TARGETDIR = ../../lib
TARGET = $(TARGETDIR)/libefsw-debug.so
OBJDIR = ../../obj/linux/x86_64/debug/efsw-shared-lib
DEFINES += -DEFSW_DYNAMIC -DEFSW_EXPORTS -DDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -Wall -Wno-long-long -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -std=c++11 -Wall -Wno-long-long -fPIC
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libefsw-debug.so
define POSTBUILDCMDS
endef

else ifeq ($(config),debug_x86)
TARGETDIR = ../../lib
TARGET = $(TARGETDIR)/libefsw-debug.so
OBJDIR = ../../obj/linux/x86/debug/efsw-shared-lib
DEFINES += -DEFSW_DYNAMIC -DEFSW_EXPORTS -DDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -fPIC -g -Wall -Wno-long-long -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -fPIC -g -std=c++11 -Wall -Wno-long-long -fPIC
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -shared -Wl,-soname=libefsw-debug.so
define POSTBUILDCMDS
endef

else ifeq ($(config),release_x86_64)
TARGETDIR = ../../lib
TARGET = $(TARGETDIR)/libefsw.so
OBJDIR = ../../obj/linux/x86_64/release/efsw-shared-lib
DEFINES += -DEFSW_DYNAMIC -DEFSW_EXPORTS -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -Wall -Wno-long-long -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++11 -Wall -Wno-long-long -fPIC
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libefsw.so -s
define POSTBUILDCMDS
endef

else ifeq ($(config),release_x86)
TARGETDIR = ../../lib
TARGET = $(TARGETDIR)/libefsw.so
OBJDIR = ../../obj/linux/x86/release/efsw-shared-lib
DEFINES += -DEFSW_DYNAMIC -DEFSW_EXPORTS -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -fPIC -Wall -Wno-long-long -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -fPIC -std=c++11 -Wall -Wno-long-long -fPIC
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -shared -Wl,-soname=libefsw.so -s
define POSTBUILDCMDS
endef

else ifeq ($(config),relwithdbginfo_x86_64)
TARGETDIR = ../../lib
TARGET = $(TARGETDIR)/libefsw.so.1.0.2
OBJDIR = ../../obj/linux/x86_64/relwithdbginfo/efsw-shared-lib
DEFINES += -DEFSW_DYNAMIC -DEFSW_EXPORTS -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -g -Wall -Wno-long-long -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -g -std=c++11 -Wall -Wno-long-long -fPIC
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libefsw.so.1.0.2
define POSTBUILDCMDS
	@echo Running postbuild commands
	sh ../../project/build.reldbginfo.sh 1 0 2 
endef

else ifeq ($(config),relwithdbginfo_x86)
TARGETDIR = ../../lib
TARGET = $(TARGETDIR)/libefsw.so.1.0.2
OBJDIR = ../../obj/linux/x86/relwithdbginfo/efsw-shared-lib
DEFINES += -DEFSW_DYNAMIC -DEFSW_EXPORTS -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -fPIC -g -Wall -Wno-long-long -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -fPIC -g -std=c++11 -Wall -Wno-long-long -fPIC
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -shared -Wl,-soname=libefsw.so.1.0.2
define POSTBUILDCMDS
	@echo Running postbuild commands
	sh ../../project/build.reldbginfo.sh 1 0 2 
endef

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Debug.o
GENERATED += $(OBJDIR)/DirWatcherGeneric.o
GENERATED += $(OBJDIR)/DirectorySnapshot.o
GENERATED += $(OBJDIR)/DirectorySnapshotDiff.o
GENERATED += $(OBJDIR)/FileInfo.o
GENERATED += $(OBJDIR)/FileSystem.o
GENERATED += $(OBJDIR)/FileSystemImpl.o
GENERATED += $(OBJDIR)/FileWatcher.o
GENERATED += $(OBJDIR)/FileWatcherCWrapper.o
GENERATED += $(OBJDIR)/FileWatcherGeneric.o
GENERATED += $(OBJDIR)/FileWatcherImpl.o
GENERATED += $(OBJDIR)/FileWatcherInotify.o
GENERATED += $(OBJDIR)/Log.o
GENERATED += $(OBJDIR)/Mutex.o
GENERATED += $(OBJDIR)/MutexImpl.o
GENERATED += $(OBJDIR)/String.o
GENERATED += $(OBJDIR)/System.o
GENERATED += $(OBJDIR)/SystemImpl.o
GENERATED += $(OBJDIR)/Thread.o
GENERATED += $(OBJDIR)/ThreadImpl.o
GENERATED += $(OBJDIR)/Watcher.o
GENERATED += $(OBJDIR)/WatcherGeneric.o
GENERATED += $(OBJDIR)/WatcherInotify.o
OBJECTS += $(OBJDIR)/Debug.o
OBJECTS += $(OBJDIR)/DirWatcherGeneric.o
OBJECTS += $(OBJDIR)/DirectorySnapshot.o
OBJECTS += $(OBJDIR)/DirectorySnapshotDiff.o
OBJECTS += $(OBJDIR)/FileInfo.o
OBJECTS += $(OBJDIR)/FileSystem.o
OBJECTS += $(OBJDIR)/FileSystemImpl.o
OBJECTS += $(OBJDIR)/FileWatcher.o
OBJECTS += $(OBJDIR)/FileWatcherCWrapper.o
OBJECTS += $(OBJDIR)/FileWatcherGeneric.o
OBJECTS += $(OBJDIR)/FileWatcherImpl.o
OBJECTS += $(OBJDIR)/FileWatcherInotify.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/Mutex.o
OBJECTS += $(OBJDIR)/MutexImpl.o
OBJECTS += $(OBJDIR)/String.o
OBJECTS += $(OBJDIR)/System.o
OBJECTS += $(OBJDIR)/SystemImpl.o
OBJECTS += $(OBJDIR)/Thread.o
OBJECTS += $(OBJDIR)/ThreadImpl.o
OBJECTS += $(OBJDIR)/Watcher.o
OBJECTS += $(OBJDIR)/WatcherGeneric.o
OBJECTS += $(OBJDIR)/WatcherInotify.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking efsw-shared-lib
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning efsw-shared-lib
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Debug.o: ../../src/efsw/Debug.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DirWatcherGeneric.o: ../../src/efsw/DirWatcherGeneric.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DirectorySnapshot.o: ../../src/efsw/DirectorySnapshot.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DirectorySnapshotDiff.o: ../../src/efsw/DirectorySnapshotDiff.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileInfo.o: ../../src/efsw/FileInfo.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileSystem.o: ../../src/efsw/FileSystem.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileWatcher.o: ../../src/efsw/FileWatcher.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileWatcherCWrapper.o: ../../src/efsw/FileWatcherCWrapper.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileWatcherGeneric.o: ../../src/efsw/FileWatcherGeneric.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileWatcherImpl.o: ../../src/efsw/FileWatcherImpl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileWatcherInotify.o: ../../src/efsw/FileWatcherInotify.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: ../../src/efsw/Log.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Mutex.o: ../../src/efsw/Mutex.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/String.o: ../../src/efsw/String.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/System.o: ../../src/efsw/System.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Thread.o: ../../src/efsw/Thread.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Watcher.o: ../../src/efsw/Watcher.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WatcherGeneric.o: ../../src/efsw/WatcherGeneric.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WatcherInotify.o: ../../src/efsw/WatcherInotify.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileSystemImpl.o: ../../src/efsw/platform/posix/FileSystemImpl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MutexImpl.o: ../../src/efsw/platform/posix/MutexImpl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SystemImpl.o: ../../src/efsw/platform/posix/SystemImpl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ThreadImpl.o: ../../src/efsw/platform/posix/ThreadImpl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif